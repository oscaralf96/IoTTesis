version: '3.9'

services:
  # Contenedor Principal (Django) para archivos estaticos
  backend:
    build: ./backend/
    # command: nohup python manage.py runserver 0.0.0.0:8000 && pwd
    command: gunicorn --chdir ./backend backend.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120
    volumes:
      - ./backend/:/usr/src/app/
      - static_volume:/usr/src/app/static/
      - media_volume:/usr/src/app/media/
    expose:
      - 8000
    env_file:
      - ./backend/.env
    depends_on:
      - db

  # Contenedor Secundario (Django) para archivos dinamicos
  daphne:
    build: ./backend/
    # command: nohup python manage.py runserver 0.0.0.0:8000 && pwd
    command: daphne -b 0.0.0.0 -p 8001 backend.asgi:application
    volumes:
      - ./backend/:/usr/src/app/
      - static_volume:/usr/src/app/static/
    ports:
      - 8001:8001
    expose:
      - 8001
    env_file:
      - ./backend/.env
    depends_on:
      - db

  # Contenedor MQTT para brocker
  mqtt_brocker:
    build: ./mosquitto/
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/mosquitto.conf
    ports:
    - 1884:1883
    depends_on:
      - db

  # Contenedor REDIS para cach√©
  redis:
    image: redis:latest
    # restart: always
    volumes:
      # - ./redis/data/:/data  
      - cache:/data 
    ports:
      - 6379:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
     
  # Contenedor POSTGRESQL para base de datos 
  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=super
      - POSTGRES_PASSWORD=super
      - POSTGRES_DB=science

  # Contenedor GRAFANA para graficos 
  grafana:
    image: grafana/grafana-enterprise
    depends_on:
        - db
    ports:
        - 3000:3000
        
  # Contenedor NGINX para servir peticiones web 
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/static/
      - media_volume:/home/app/media/
      # - .nginx/nginx.conf:/etc/nginx/conf.d
    ports:
      - 8080:80
    depends_on:
      - backend

volumes:
  postgres_data:
  cache:
  static_volume:
  media_volume: